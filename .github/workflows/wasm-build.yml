name: Emscripten (wasm) build

on:
  pull_request:
  push:
    paths-ignore:
      - '.github/workflows/coverage.yml'
      - '.github/workflows/linux-build.yml'
      - '.github/workflows/macos-build.yml'
      - '.github/workflows/msys2-build.yml'
      - '.github/workflows/windows-build.yml'
      - '.gitignore'
      - 'LICENSE'
      - 'CHANGELOG.md'
      - 'README.md'

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest]
        arch: [x86_64]
        mode: [debug, releasedbg]

    runs-on: ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, 'ci skip')"

    steps:
    - name: Get current date as package key
      id: pkg_key
      run: echo "::set-output name=key::$(date +'%W')"

    - name: Checkout repository
      uses: actions/checkout@v3

    # Force xmake to a specific folder (for cache)
    - name: Set xmake env
      run: echo "XMAKE_GLOBALDIR=${{ runner.workspace }}/xmake-global" >> $GITHUB_ENV

    # Install xmake
    - name: Setup xmake
      uses: xmake-io/github-action-setup-xmake@v1

    # Update xmake repository (in order to have the file that will be cached)
    - name: Update xmake repository
      run: xmake repo --update

    # Fetch xmake dephash
    - name: Retrieve dependencies hash
      id: dep_hash
      run: echo "::set-output name=hash::$(xmake l utils.ci.packageskey)"

    # Cache xmake dependencies
    - name: Retrieve cached xmake dependencies
      uses: actions/cache@v3
      with:
        path: ${{ env.XMAKE_GLOBALDIR }}/.xmake/packages
        key: Wasm-${{ matrix.arch }}-${{ matrix.mode }}-${{ steps.dep_hash.outputs.hash }}-W${{ steps.pkg_key.outputs.key }}

    # Setup emsdk
    - name: Setup emscripten
      uses: mymindstorm/setup-emsdk@v11
      with:
        version: 1.38.40
        actions-cache-folder: emsdk-cache-${{ matrix.mode }}

    # Setup compilation mode and install project dependencies
    - name: Configure xmake and install dependencies
      run: xmake config --tests=y --plat=wasm --arch=${{ matrix.arch }} --mode=${{ matrix.mode }} --ccache=n --yes

    # Build library and tests
    - name: Build library
      run: xmake

    # Install the result files
    - name: Install NazaraUtils
      run: xmake install -vo package

    # Upload artifacts
    - uses: actions/upload-artifact@v2
      with:
        name: nazarautils-${{ matrix.os }}-${{ matrix.arch }}-${{ matrix.mode }}
        path: package
